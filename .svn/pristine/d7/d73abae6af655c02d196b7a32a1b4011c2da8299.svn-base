<?php
namespace app\index\controller;
use app\index\controller\Base;
use app\index\model\Userinfo as UserModel;
use app\index\model\UserExtra as UserExtraModel;
use app\index\model\Role as RoleModel;
use app\index\model\Department as DepartModel;
use think\Session;
use think\Db;
use think\Request;
class User extends Base
{
    protected $sex_type = ['1' => '男', '2' => '女'];

    protected $is_disable_type = ['0' => '开启', '1' => '关闭'];

    public function index()
    {
        //分页数据
        $list = Db::table('userinfo')
            ->alias('a')
            ->join('user_extra b', 'a.user_id = b.user_id')
            ->where('a.is_disable', '0')
            ->paginate(10);
        //总条数
        $count = Db::table('userinfo')
            ->alias('a')
            ->join('user_extra b', 'a.user_id = b.user_id')
            ->where('a.is_disable', '0')
            ->count();

        //往模版中传入值
        $this->assign('list', $list);
        $this->assign('count', $count);
        $this->assign('sex_type', $this->sex_type);
        $this->assign('is_disable_type', $this->is_disable_type);
        $this->assign('dept_info', $this->getdep());
        $this->assign('title', '用户列表');

        return $this->view->fetch();
    }

    //渲染添加用户模版
    public function store()
    {
        $role_info = RoleModel::all();

        $depart_info = Db::table('department')
            ->field( ['dept_id'=>'id', 'parent_id'=>'pId', 'name'])
            ->where('status','1')
            ->order('sort','desc')
            ->select();
        foreach ($depart_info as $k=>$v){
            if ($v['pId'] == 0){
                $depart_info[$k]['open'] = true;
            }
        }

        $this->assign('depart_info',json_encode($depart_info));
        $this->assign('role_info', $role_info);
        $this->assign('title', '添加用户');

        return $this->view->fetch('user_create');
    }

    //添加用户数据处理
    public function create(Request $request)
    {

        $user_info = $request->param();
    }

    private function getdep()
    {
        $dep_info = DepartModel::all();

        $dep_arr = array_column(json_decode(json_encode($dep_info),true),'name','dept_id');

        return $dep_arr;
    }

    public function getuserinfo()
    {
        $uid = request()->param('user_id');

        $user = UserModel::get($uid);

        $user_info = UserExtraModel::get($uid);

        $dept = DepartModel::get($user->dept_id);

        $this->assign('user',$user);
        $this->assign('user_info',$user_info);
        $this->assign('dept',$dept);
        $this->assign('sex_type', $this->sex_type);


        return $this->view->fetch('user_info');
    }

}
